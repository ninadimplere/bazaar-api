// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(cuid())
  email        String?  @unique
  password     String?
  status       String?  @default("active")
  statusRemark String?
  role         String[] @default([])
  isActive     Boolean? @default(true)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  reviews      Review[]
}

model Category {
  id        Int        @id @default(autoincrement())
  name      String
  parentId  Int?
  parent    Category?  @relation("CategoryToSubcategory", fields: [parentId], references: [id])
  children  Category[] @relation("CategoryToSubcategory")
  slug      String     @unique
  isActive  Boolean    @default(true)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Product {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  price       Float
  category    String?
  imageUrl    String?
  sellerId    Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  reviews     Review[]
}

model Review {
  id          Int      @id @default(autoincrement())
  productId   Int
  userId      String
  rating      Int      @default(0)
  comment     String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  product     Product  @relation(fields: [productId], references: [id])
  user        User     @relation(fields: [userId], references: [id])
}
