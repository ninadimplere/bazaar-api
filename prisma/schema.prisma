generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum AccountType {
  INDIVIDUAL
  COMPANY
}

enum VerificationMethod {
  INSTANT
  MANUAL
}

enum UserApprovalStatus {
  PENDING
  APPROVED
  REJECTED
}

model User {
  id        String   @id @default(cuid())
  email     String?  @unique
  password  String?
  role      String[] @default([])
  isActive  Boolean? @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  seller    Seller?
}

model Seller {
  id                 Int                @id @default(autoincrement())
  userId             String             @unique
  user               User               @relation(fields: [userId], references: [id])
  accountType        AccountType
  fullName           String?
  email              String?            @unique
  phoneNumber        String?
  profileImageUrl    String?
  status             UserApprovalStatus
  statusRemark       String?
  billingAddress     String
  bankAccountNumber  String
  bankIfscCode       String
  bankVerified       Boolean            @default(false)
  panNumber          String?
  aadhaarNumber      String?
  gstNumber          String?
  cinNumber          String?
  panDocumentUrl     String?
  aadhaarDocumentUrl String?
  gstCertificateUrl  String?
  cinDocumentUrl     String?
  verificationMethod VerificationMethod
  verifiedAt         DateTime?

  createdAt DateTime @default(now())
  createdBy String?
  updatedAt DateTime @updatedAt
}

model Category {
  id        Int        @id @default(autoincrement())
  name      String
  parentId  Int?
  parent    Category?  @relation("CategoryToSubcategory", fields: [parentId], references: [id])
  children  Category[] @relation("CategoryToSubcategory")
  slug      String     @unique
  isActive  Boolean    @default(true)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}
